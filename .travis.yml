language: cpp

matrix:
  include:
    - name: Linux / Clang 10.0
      compiler: clang
      os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - libc++abi-10-dev
            - libc++abi1-10
            - libc++1-10
            - libc++-10-dev
            - libclang-cpp10 
            - libllvm10 
            - libclang-common-10-dev
            - libclang1-10
            - clang-10
            - ninja-build
      env:
         - CC=clang-10
         - CXX=clang++-10
         - CC_FOR_BUILD=clang-10
         - CXX_FOR_BUILD=clang++-10

    - name: Linux / GCC 9
      compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - ninja-build
      env:
         - CC=gcc-9
         - CXX=g++-9
         - CC_FOR_BUILD=gcc-9
         - CXX_FOR_BUILD=g++-9

    - name: Windows / Visual Studio 16 2019 / Debug
      os: windows
      compiler: cl
      before_install:
        - choco install visualstudio2019community
        - choco install visualstudio2019-workload-nativedesktop 
        - choco install ninja
        - export VS160COMNTOOLS="/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools"
      before_script:
        - mkdir build
        - cd build
        - cmake -A x64 ..
      script:
        - '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe" volt_ecs.sln -p:Configuration=Debug -v:q'
        - ctest -C Debug
        
    - name: Windows / Visual Studio 16 2019 / Release
      os: windows
      compiler: cl
      before_install:
        - choco install visualstudio2019community
        - choco install visualstudio2019-workload-nativedesktop 
        - choco install ninja
        - export VS160COMNTOOLS="/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools" 
      before_script:
        - mkdir build
        - cd build
        - cmake -A x64 ..
      script:
        - '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe" volt_ecs.sln -p:Configuration=Release -v:q'
        - ctest -C Release

before_script:
  - mkdir build
  - cd build
  - cmake -GNinja ..
  - ninja

script:
  - ctest

notifications:
  email:
    on_success: change
    on_failure: always